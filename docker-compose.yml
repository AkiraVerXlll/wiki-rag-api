version: '3.8'

services:
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - USER_AGENT=${USER_AGENT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - shared_data:/app/data
    restart: unless-stopped

  celery_worker:
    build: .
    command: celery -A src.core.worker.celery_app worker --loglevel=info
    environment:
      - USER_AGENT=${USER_AGENT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - C_FORCE_ROOT=true
    depends_on:
      redis:
        condition: service_healthy
      app:
        condition: service_started
    volumes:
      - ./logs:/app/logs
      - shared_data:/app/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - shared_data:/app/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

volumes:
  redis_data:
  shared_data: 